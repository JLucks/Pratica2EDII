/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import base.*;
import java.util.List;

/**
 *
 * @authors Jorge & Daniel
 */
public class DocumentList extends javax.swing.JPanel {

    private List<Word> words;
    private List<AddressDoc> docs;
    private int numberIds;
    
    /**
     * Creates new form DocumentList
     */
    public DocumentList(int numberIds, List<Word> words, List<AddressDoc> docs) {
        this.numberIds = numberIds; //Id atual
        this.words = words; //Indice Invertido atual
        this.docs = docs;   //Documentos atuais
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bttGoBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTIndices = new javax.swing.JTextArea();

        bttGoBack.setText("Voltar");
        bttGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttGoBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Corbel", 0, 18)); // NOI18N
        jLabel1.setText("Indice Invertido");

        JTIndices.setEditable(false);
        JTIndices.setColumns(20);
        JTIndices.setRows(5);
        jScrollPane1.setViewportView(JTIndices);
        for(Word word: this.words){ //Enquanto tiver palavras
            JTIndices.setText(JTIndices.getText()+word.getWord()+" --> ");  //Mostra a palavra
            for(WordInDoc qntWord: word.getQuantityByDocs()){   //Enquanto tiver indice
                JTIndices.setText(JTIndices.getText()+this.loadNameDoc(qntWord.getIdDoc())+":="+qntWord.getQuantity()+"   ");   //Mostra o nome do documento e o numero de vezes que palavra ocorre
            }
            JTIndices.setText(JTIndices.getText()+"\n");
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addComponent(bttGoBack)))
                        .addGap(0, 128, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bttGoBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bttGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttGoBackActionPerformed
        Main.janela.setVisible(false);
        Main.janela.remove(this);
        Main.janela.add(new Home(this.numberIds,this.words,this.docs)); //Chama a janela Home passando o id, indice invertido, documentos
        Main.janela.setSize(615,460);
        Main.janela.setVisible(true);
    }//GEN-LAST:event_bttGoBackActionPerformed
    
    //Função retorna o nome do doumento referente ao id
    private String loadNameDoc(String idDoc){
        String nameDoc = null;
        for(AddressDoc doc: this.docs){ //Enquanto tiver documentos
            if(idDoc.equals(doc.getIdDoc())){   //Verifica se é o documento
                nameDoc = doc.getAddress().substring(doc.getAddress().lastIndexOf("\\")+1, doc.getAddress().indexOf(".txt"));   //Pega o nome do documento
            }
        }
        return nameDoc;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea JTIndices;
    private javax.swing.JButton bttGoBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
